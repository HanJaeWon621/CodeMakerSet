sts 설치
Dependency Injection(주입)
-객체 생성 사용시 new를 사용하지 외부에서 가져오는 방식

독립형 JAVA파일에서 DI 사용 코드
스프링 컨테이너의 이행
import org.springframework.context.support.AbstractApplicationContext;
String configuration = "classpath:applicationCTX.xml"; //스프링 컨피규레이션 파일
AbstractApplicationContext ctx = new GenericXmlApplicationContext(configuration); // 스프링 컨테이너 생성
MyCalculator myCalculator = ctx.getBean("myCalculator", MyCalculator.class);  //스프링 컨테이너에서 컴포넌트 가져옴

spring 프로퍼티 설정에서 프로퍼티 설정을 사용할 수  있는 java파일에  setter가 존재하기 때문
참조 -->스프링프로퍼티.jpg

DI활용
 -의존관계
  xml, java파일을 이용 가능
  setter를 이용하지 생성자를 이용가능
 -DI사용에 따른 장점
  커다란 프로젝트에서 스프링DI 장점을 느낄수 있다.
  Java파일의 수정 없이 스피링 설정 파일만을 수정하여 부품들을 생성/ 조립하고 있습니다.
 인터페이스를 사용해야 한다.

DI설정방법
 -XML파일을 이용한  DI설정 방법 추천
 -JAVA를 이용한 DI설정 방법 : 비추천
  Annotation사용
 -XML과  JAVA를 같이 사용 :비추천
